(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{479:function(e,t,s){"use strict";s.r(t);var a=s(46),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"碰到的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#碰到的问题"}},[e._v("#")]),e._v(" 碰到的问题")]),e._v(" "),s("h2",{attrs:{id:"部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[e._v("#")]),e._v(" 部署")]),e._v(" "),s("h3",{attrs:{id:"关于https配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于https配置"}},[e._v("#")]),e._v(" 关于https配置")]),e._v(" "),s("p",[e._v("使用"),s("code",[e._v("curl")]),e._v("命令请求koa搭建的服务器，如果传入是"),s("code",[e._v("curl localhost:3001")]),e._v("这种域名和证书无法对应的，就会出现"),s("code",[e._v("empty reply from server")]),e._v("的问题，并不是服务器出问题，这种时候在远程服务器搭建好nginx代理，如果nginx层没有设证书，访问的话会出现"),s("code",[e._v("ssl error")]),e._v("网络无法的问题。因此解决这个问题就是要nginx层设置证书，不能仅仅监听443端口，然后代理"),s("code",[e._v("proxy_pass https://localhost: 3001")]),e._v("。")]),e._v(" "),s("ul",[s("li",[e._v("静态文件通过nginx进行http2传输需要在配置文件指明："),s("code",[e._v("listen 443 ssl htt2")]),e._v("。")]),e._v(" "),s("li",[e._v("nginx静态资源无法请求，出现403 forbidden："),s("code",[e._v("nguni.conf")]),e._v("中的"),s("code",[e._v("user nginx")]),e._v("改成"),s("code",[e._v("user root")]),e._v("。")])]),e._v(" "),s("h3",{attrs:{id:"关于docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于docker"}},[e._v("#")]),e._v(" 关于docker")]),e._v(" "),s("ul",[s("li",[e._v("docker-compose解决nginx和服务端渲染web程序的容器化。")]),e._v(" "),s("li",[e._v("mac环境下docker没有docker0。宿主机ip也不是172.17.0.1，要访问宿主机ip，要通过"),s("code",[e._v("docker.for.mac.host.internal")]),e._v("。")])]),e._v(" "),s("h2",{attrs:{id:"开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发"}},[e._v("#")]),e._v(" 开发")]),e._v(" "),s("h3",{attrs:{id:"关于服务端渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于服务端渲染"}},[e._v("#")]),e._v(" 关于服务端渲染")]),e._v(" "),s("h4",{attrs:{id:"webpack服务端配置的externals以及babel中配置antd按需引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack服务端配置的externals以及babel中配置antd按需引用"}},[e._v("#")]),e._v(" webpack服务端配置的"),s("code",[e._v("externals")]),e._v("以及babel中配置antd按需引用")]),e._v(" "),s("p",[e._v("使用"),s("code",[e._v("antd")]),e._v("时的"),s("code",[e._v("externals")]),e._v("配置如下：")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("  externals"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("nodeExternals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    whitelist"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("ant-design-vue\\/lib\\/(.)+\\/style\\/css")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("p",[e._v("服务端打包时需要外置化node_modules，但是webpack只能处理js，因此"),s("code",[e._v("antd")]),e._v("相关的css不能外置化，"),s("code",[e._v("whitelist")]),e._v("中设置"),s("code",[e._v("antd")]),e._v("相关文件。")]),e._v(" "),s("p",[e._v("antd按需引用时的babel配置如下：")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"import"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"libraryName"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ant-design-vue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"libraryDirectory"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"lib"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"style"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"css"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),s("p",[s("code",[e._v("libraryDirectory")]),e._v("设置为"),s("code",[e._v("lib")]),e._v("，因为服务端不能使用"),s("code",[e._v("es")]),e._v("的引用方式。")]),e._v(" "),s("h4",{attrs:{id:"koa服务端热更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#koa服务端热更新"}},[e._v("#")]),e._v(" koa服务端热更新")]),e._v(" "),s("p",[e._v("要点如下：")]),e._v(" "),s("ul",[s("li",[e._v("webpack dev配置的"),s("code",[e._v("pulbicPath")]),e._v("设为"),s("code",[e._v("http://localhost8080")]),e._v("，然后服务端中的的"),s("code",[e._v("clientManifest")]),e._v("通过axios进行请求。这样clientManifest指向的静态资源路径就是webpack dev server中的静态资源的路径，当相关代码发生改变时，webpack dev server的热更新功能就会令服务端中的页面发生变化。")])]),e._v(" "),s("h4",{attrs:{id:"预先加载dll"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预先加载dll"}},[e._v("#")]),e._v(" 预先加载dll")]),e._v(" "),s("p",[s("code",[e._v("clientManifest")]),e._v("中有3个部分："),s("code",[e._v("all")]),e._v("、"),s("code",[e._v("async")]),e._v("、"),s("code",[e._v("initial")]),e._v("，其中"),s("code",[e._v("initial")]),e._v("是根路由所需要的资源，并且其资源是"),s("code",[e._v("preload")]),e._v("的，而"),s("code",[e._v("async")]),e._v("是"),s("code",[e._v("prefetch")]),e._v("的，dll生成的js代码也是"),s("code",[e._v("prefetch")]),e._v("的，但是dll中代码包括"),s("code",[e._v("vue")]),e._v("、"),s("code",[e._v("axios")]),e._v("等不需要按需引用、不常变化的第三方库，"),s("code",[e._v("vue")]),e._v("是页面中dom必须比业务代码先引用的运行时代码，不能是"),s("code",[e._v("prefetch")]),e._v("的，因此在server端代码中将"),s("code",[e._v("async")]),e._v("中的dll代码移到"),s("code",[e._v("initial")]),e._v("中。")]),e._v(" "),s("p",[e._v("###关于service worker")]),e._v(" "),s("h4",{attrs:{id:"serviceworker的引入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serviceworker的引入"}},[e._v("#")]),e._v(" serviceWorker的引入")]),e._v(" "),s("p",[e._v("配置serviceWorker时要注意"),s("code",[e._v("clientManifest")]),e._v("中不要引用workbox中产生的"),s("code",[e._v("serviceWorker.js")]),e._v("和"),s("code",[e._v("precache")]),e._v("文件，否则"),s("code",[e._v("serviceWorker.js")]),e._v("的逻辑就会在非web worker环境下执行"),s("code",[e._v("importScripts")]),e._v("造成报错。")]),e._v(" "),s("h4",{attrs:{id:"workbox路径配置以及serviceworker热更新有时失效的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workbox路径配置以及serviceworker热更新有时失效的问题"}},[e._v("#")]),e._v(" workbox路径配置以及serviceWorker热更新有时失效的问题")]),e._v(" "),s("p",[e._v("workbox的"),s("code",[e._v("swSrc")]),e._v("路径必须是绝对路径，使用"),s("code",[e._v("path.join")]),e._v("获得，否则会造成serviceWorker无法热更新的问题。这个问题和webpack的fileSystem有关，webpack的fileSystem是CacheFileSystem，它会将静态资源路径作为一个Set的key，当相关资源发生变化时，就会根据key删除旧的资源并使用新的资源。workbox的injectManifest方法中直接使用传入的"),s("code",[e._v("swSrc")]),e._v("路径作为参数调用readFile方法，")]),e._v(" "),s("p",[e._v("如果使用相对路径，那么key就是相对路径，但是webpack启动时处理serviceWorker保存的key是绝对路径，这样就导致CacheFileSystem无法根据这个相对路径的key删除旧的资源。但是serviceWorker文件有时候会热更新成功，这是因为CacheFileSystem有个计时机制，默认为6s，6s后就会清除旧的资源，此时就会读取新的资源。")]),e._v(" "),s("p",[e._v("####babel转换和webpack打包之模块化处理service worker与业务代码共同引用的模块")]),e._v(" "),s("p",[e._v("babel中的plugin-transform-runtime可以指定corejs为2，2的意思是并不全局注入es6的一些方法，即不是polyfill。如果没有指定转换的module类型，则会默认转成es6模块。处理Promise的时候，会通过import来引入处理的相关代码，此时，如果共同引用的模块中有module.exports的话，就会导致module.exports和import共同使用的报错。解决方法就是babel中指定sourceType为unambiguous，这样其处理文件时，就会将有import和export的处理为es6模块，其他的则处理为正常的script。因此其处理共同的模块时，碰到module.export就不会再通过import的方式引入处理Promise方法的模块，从而不会报错。也可以将module类型设置为commons，但是这样就会失去tree shaking的好处，因此不建议这么做。")]),e._v(" "),s("h3",{attrs:{id:"关于vue框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于vue框架"}},[e._v("#")]),e._v(" 关于vue框架")]),e._v(" "),s("p",[e._v("vuex和vue-router的时间？")])])}),[],!1,null,null,null);t.default=r.exports}}]);