(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{490:function(t,a,s){"use strict";s.r(a);var v=s(46),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js数据结构与算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js数据结构与算法"}},[t._v("#")]),t._v(" JS数据结构与算法")]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h3",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("ul",[s("li",[t._v("concat")]),t._v(" "),s("li",[t._v("every：在每个元素运行给定函数，如果每个元素都返回true，则返回true")]),t._v(" "),s("li",[t._v("filter")]),t._v(" "),s("li",[t._v("forEach")]),t._v(" "),s("li",[t._v("join")]),t._v(" "),s("li",[t._v("indexOf")]),t._v(" "),s("li",[t._v("lastIndexOf")]),t._v(" "),s("li",[t._v("map")]),t._v(" "),s("li",[t._v("reverse")]),t._v(" "),s("li",[t._v("slice")]),t._v(" "),s("li",[t._v("some：在每个元素运行给定函数，如果任一元素返回true，则返回true")]),t._v(" "),s("li",[t._v("sort")]),t._v(" "),s("li",[t._v("toString")]),t._v(" "),s("li",[t._v("valueOf")]),t._v(" "),s("li",[t._v("reduce")]),t._v(" "),s("li",[t._v("copyWithin：复制数组中一系列元素到同一数组的起始位置")]),t._v(" "),s("li",[t._v("entries")]),t._v(" "),s("li",[t._v("includes")]),t._v(" "),s("li",[t._v("find")]),t._v(" "),s("li",[t._v("findIndex")]),t._v(" "),s("li",[t._v("fill")]),t._v(" "),s("li",[t._v("from")]),t._v(" "),s("li",[t._v("keys")]),t._v(" "),s("li",[t._v("values")])]),t._v(" "),s("p",[t._v("使用@@interator对象")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" iterator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'a', done: false }")]),t._v("\n")])])]),s("h3",{attrs:{id:"类型数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型数组"}},[t._v("#")]),t._v(" 类型数组")]),t._v(" "),s("ul",[s("li",[t._v("Int8Arrary")]),t._v(" "),s("li",[t._v("Uint8Array")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",target:"_blank",rel:"noopener noreferrer"}},[t._v("Uint8ClampedArray"),s("OutboundLink")],1),t._v("：8位无符号整型固定数组")]),t._v(" "),s("li",[t._v("Int16Array")]),t._v(" "),s("li",[t._v("Uint16Array")]),t._v(" "),s("li",[t._v("Int32Array")]),t._v(" "),s("li",[t._v("Uint32Array")]),t._v(" "),s("li",[t._v("Float32Array")]),t._v(" "),s("li",[t._v("Float64Array")])]),t._v(" "),s("p",[t._v("使用WebGL API、进行位操作、处理文件和图像时，类型数组可以大展拳脚。"),s("a",{attrs:{href:"https://www.html5rocks.com/en/tutorials/webgl/typed_arrays/",target:"_blank",rel:"noopener noreferrer"}},[t._v("类型数组教程"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),s("p",[t._v("后进先出。")]),t._v(" "),s("p",[t._v("包含的方法：")]),t._v(" "),s("ul",[s("li",[t._v("push")]),t._v(" "),s("li",[t._v("pop")]),t._v(" "),s("li",[t._v("peek")]),t._v(" "),s("li",[t._v("isEmpty")]),t._v(" "),s("li",[t._v("clear")]),t._v(" "),s("li",[t._v("size")])]),t._v(" "),s("h3",{attrs:{id:"保护数据结构内部的元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保护数据结构内部的元素"}},[t._v("#")]),t._v(" 保护数据结构内部的元素")]),t._v(" "),s("p",[t._v("Stack类中声明的items和count属性外界可以访问，可以通过以下方法解决：")]),t._v(" "),s("ul",[s("li",[t._v("下划线命名约定")]),t._v(" "),s("li",[t._v("使用Symbol类型的类成员变量\n"),s("ul",[s("li",[t._v("Object.getOwnPropertySymbols仍能获得类中声明的属性")])])]),t._v(" "),s("li",[t._v("WeakMap存储items\n"),s("ul",[s("li",[t._v("可读性不强，扩展该类无法集成私有属性")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" items "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("element")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"用栈的方法解决问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用栈的方法解决问题"}},[t._v("#")]),t._v(" 用栈的方法解决问题")]),t._v(" "),s("h4",{attrs:{id:"从十进制到二进制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从十进制到二进制"}},[t._v("#")]),t._v(" 从十进制到二进制")]),t._v(" "),s("h4",{attrs:{id:"进制转换算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进制转换算法"}},[t._v("#")]),t._v(" 进制转换算法")]),t._v(" "),s("h2",{attrs:{id:"队列和双端队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列和双端队列"}},[t._v("#")]),t._v(" 队列和双端队列")]),t._v(" "),s("p",[t._v("先进先出。")]),t._v(" "),s("p",[t._v("包含方法：")]),t._v(" "),s("ul",[s("li",[t._v("enqueue")]),t._v(" "),s("li",[t._v("dequeue")]),t._v(" "),s("li",[t._v("peek")]),t._v(" "),s("li",[t._v("isEmpty")]),t._v(" "),s("li",[t._v("size")])]),t._v(" "),s("p",[t._v("双端队列允许同时从前、后两处添加和删除元素。")]),t._v(" "),s("p",[t._v("包含方法：")]),t._v(" "),s("ul",[s("li",[t._v("addFront")]),t._v(" "),s("li",[t._v("addBack")]),t._v(" "),s("li",[t._v("removeFront")]),t._v(" "),s("li",[t._v("removeBack")]),t._v(" "),s("li",[t._v("peekFront")]),t._v(" "),s("li",[t._v("peekBack")])]),t._v(" "),s("h3",{attrs:{id:"使用队列和双端队列解决问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用队列和双端队列解决问题"}},[t._v("#")]),t._v(" 使用队列和双端队列解决问题")]),t._v(" "),s("h4",{attrs:{id:"循环队列-击鼓传花游戏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环队列-击鼓传花游戏"}},[t._v("#")]),t._v(" 循环队列——击鼓传花游戏")]),t._v(" "),s("h4",{attrs:{id:"回文检查器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回文检查器"}},[t._v("#")]),t._v(" 回文检查器")]),t._v(" "),s("h4",{attrs:{id:"js任务队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js任务队列"}},[t._v("#")]),t._v(" JS任务队列")]),t._v(" "),s("h2",{attrs:{id:"链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),s("p",[t._v("与数组不同，链表元素并不是连续内存。")]),t._v(" "),s("p",[t._v("包含的方法：")]),t._v(" "),s("ul",[s("li",[t._v("push")]),t._v(" "),s("li",[t._v("insert")]),t._v(" "),s("li",[t._v("getElementAt")]),t._v(" "),s("li",[t._v("remove")]),t._v(" "),s("li",[t._v("indexOf")]),t._v(" "),s("li",[t._v("removeAt")]),t._v(" "),s("li",[t._v("isEmpty")]),t._v(" "),s("li",[t._v("size")])]),t._v(" "),s("h3",{attrs:{id:"双向链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双向链表"}},[t._v("#")]),t._v(" 双向链表")]),t._v(" "),s("p",[t._v("一个链表节点中，既能链向下一个元素，也能链向上一个元素。")]),t._v(" "),s("h3",{attrs:{id:"循环链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环链表"}},[t._v("#")]),t._v(" 循环链表")]),t._v(" "),s("p",[t._v("既可以单向引用，也可以双向引用。head.prev指向tail，tail.next指向head。")]),t._v(" "),s("h3",{attrs:{id:"有序链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有序链表"}},[t._v("#")]),t._v(" 有序链表")]),t._v(" "),s("h2",{attrs:{id:"集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),s("p",[t._v("无序且唯一。")]),t._v(" "),s("p",[t._v("包含的方法：")]),t._v(" "),s("ul",[s("li",[t._v("add")]),t._v(" "),s("li",[t._v("delete")]),t._v(" "),s("li",[t._v("has")]),t._v(" "),s("li",[t._v("clear")]),t._v(" "),s("li",[t._v("size")]),t._v(" "),s("li",[t._v("values")])]),t._v(" "),s("h3",{attrs:{id:"集合运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合运算"}},[t._v("#")]),t._v(" 集合运算")]),t._v(" "),s("ul",[s("li",[t._v("并集")]),t._v(" "),s("li",[t._v("交集")]),t._v(" "),s("li",[t._v("差集")]),t._v(" "),s("li",[t._v("子集")])]),t._v(" "),s("h4",{attrs:{id:"改进交集方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改进交集方法"}},[t._v("#")]),t._v(" 改进交集方法")]),t._v(" "),s("p",[t._v("迭代元素数量较少的集合")]),t._v(" "),s("h3",{attrs:{id:"多重集或袋"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多重集或袋"}},[t._v("#")]),t._v(" 多重集或袋")]),t._v(" "),s("h2",{attrs:{id:"字典和散列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典和散列表"}},[t._v("#")]),t._v(" 字典和散列表")]),t._v(" "),s("h3",{attrs:{id:"字典"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[t._v("#")]),t._v(" 字典")]),t._v(" "),s("p",[t._v("字典包含的方法：")]),t._v(" "),s("ul",[s("li",[t._v("set")]),t._v(" "),s("li",[t._v("remove")]),t._v(" "),s("li",[t._v("hasKey")]),t._v(" "),s("li",[t._v("get")]),t._v(" "),s("li",[t._v("clear")]),t._v(" "),s("li",[t._v("size")]),t._v(" "),s("li",[t._v("isEmpty")]),t._v(" "),s("li",[t._v("keys")]),t._v(" "),s("li",[t._v("values")]),t._v(" "),s("li",[t._v("keyValues")]),t._v(" "),s("li",[t._v("forEach")])]),t._v(" "),s("h3",{attrs:{id:"散列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#散列表"}},[t._v("#")]),t._v(" 散列表")]),t._v(" "),s("p",[t._v("散列表包含的方法：")]),t._v(" "),s("ul",[s("li",[t._v("put")]),t._v(" "),s("li",[t._v("remove")]),t._v(" "),s("li",[t._v("get")])]),t._v(" "),s("p",[t._v("解决冲突：")]),t._v(" "),s("ul",[s("li",[t._v("线性探查")])]),t._v(" "),s("p",[t._v("需要一个散列函数，利于lose lose、djb2。")]),t._v(" "),s("h2",{attrs:{id:"递归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),s("h3",{attrs:{id:"斐波那契数列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#斐波那契数列"}},[t._v("#")]),t._v(" 斐波那契数列")]),t._v(" "),s("ul",[s("li",[t._v("迭代")]),t._v(" "),s("li",[t._v("递归")]),t._v(" "),s("li",[t._v("记忆化")]),t._v(" "),s("li",[t._v("尾递归")])]),t._v(" "),s("h2",{attrs:{id:"树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[t._v("#")]),t._v(" 树")]),t._v(" "),s("h3",{attrs:{id:"二叉树和二叉搜索树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉树和二叉搜索树"}},[t._v("#")]),t._v(" 二叉树和二叉搜索树")]),t._v(" "),s("p",[t._v("BST：")]),t._v(" "),s("ul",[s("li",[t._v("insert")]),t._v(" "),s("li",[t._v("search")]),t._v(" "),s("li",[t._v("inOrderTraverse")]),t._v(" "),s("li",[t._v("preOrderTraverse")]),t._v(" "),s("li",[t._v("postOrderTraverse")]),t._v(" "),s("li",[t._v("min")]),t._v(" "),s("li",[t._v("max")]),t._v(" "),s("li",[t._v("remove")])]),t._v(" "),s("h3",{attrs:{id:"avl树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#avl树"}},[t._v("#")]),t._v(" AVL树")]),t._v(" "),s("ul",[s("li",[t._v("旋转\n"),s("ul",[s("li",[t._v("LL型：右旋\n"),s("ul",[s("li",[t._v("左侧子节点高度大于右侧，并且左侧子节点平衡或左侧较重")])])]),t._v(" "),s("li",[t._v("RR型：左旋\n"),s("ul",[s("li",[t._v("右侧子节点高度大于左侧，并且右侧子节点平衡或右侧较重")])])]),t._v(" "),s("li",[t._v("LR型：先对左子节点左旋转，再对节点右旋转\n"),s("ul",[s("li",[t._v("左侧子节点高度大于右侧，并且左侧子节点右侧较重")])])]),t._v(" "),s("li",[t._v("RL型：先右子节点右旋转，再对节点左旋转\n"),s("ul",[s("li",[t._v("右侧子节点高度大于左侧，并且右侧子节点左侧较重")])])])])])]),t._v(" "),s("h3",{attrs:{id:"红黑树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#红黑树"}},[t._v("#")]),t._v(" 红黑树")]),t._v(" "),s("p",[t._v("当涉及多次插入和删除时，红黑树会比AVL树更好。")]),t._v(" "),s("h2",{attrs:{id:"二叉堆和堆排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉堆和堆排序"}},[t._v("#")]),t._v(" 二叉堆和堆排序")]),t._v(" "),s("h3",{attrs:{id:"二叉堆数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉堆数据结构"}},[t._v("#")]),t._v(" 二叉堆数据结构")]),t._v(" "),s("p",[t._v("二叉堆是一种特殊的二叉树，具有以下两个特性：")]),t._v(" "),s("ul",[s("li",[t._v("是一颗完全二叉树，表示树每一层都有两个节点（除了最后一层的叶子节点），并且最后一层的叶子节点尽可能都是左侧子节点。这是结构特性。")]),t._v(" "),s("li",[t._v("二叉堆不是最小堆就是最大堆。最小堆允许快速导出树的最小值，最大堆允许快速导出树的最大值。所有节点都大于等于（最大堆）或小于等于（最小堆）每个它的子节点。这是堆特性。")])])])}),[],!1,null,null,null);a.default=_.exports}}]);