(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{477:function(s,t,a){"use strict";a.r(t);var e=a(46),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"现代模式打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现代模式打包"}},[s._v("#")]),s._v(" 现代模式打包")]),s._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),a("p",[s._v("打包应用的过程中通常会使用babel对代码进行转译，使得一些js的新特性也能在低版本浏览器中正常运行，但是如果一些用户使用的浏览器版本很高，足以支持这些特性，那么下载的js文件如果也被转译了就会带来浪费，而现代模式打包应用就是解决这个问题的，对支持新特性的用户分发es6代码，对不支持分发转移后的代码。")]),s._v(" "),a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),s._v(" src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"..."')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("当script标签碰到"),a("code",[s._v('type="module"')]),s._v("时，就会将对应文件作为一个module运行，如果浏览器不支持"),a("code",[s._v('type="module"')]),s._v("就会忽略这个脚本的执行，此时就需要用到"),a("code",[s._v("nomodule")]),s._v("来进行降级处理：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script nomodule src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"..."')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("在浏览器不识别"),a("code",[s._v('type="module"')]),s._v("的时候，执行nomodule中的代码。")]),s._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),a("p",[s._v("Vue CLI中直接提供了现代模式构建的方法：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("vue"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("cli"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("service build "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("modern\n")])])]),a("p",[s._v("从打包过程和打包结果可以看出，其实就是执行了两次webpack打包过程，以此用了babel进行转移，称为legacy build，一次没有进行转移，称为modern build。")]),s._v(" "),a("h2",{attrs:{id:"实现方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现方法"}},[s._v("#")]),s._v(" 实现方法")]),s._v(" "),a("p",[s._v("每一次打包，都会将打包的资源通过htmlWebpackPlugin内联进html模板中，两次打包后就会有两者的资源，legacy build时内联的标签会有"),a("code",[s._v('nomodule=""')]),s._v("的属性，在modern build时，就会将该属性替换成"),a("code",[s._v("nomodule")]),s._v("，然后modern build的标签会添加"),a("code",[s._v('type="module"')]),s._v("属性。其还针对Safari 10.1不识别nomodule导致执行两套资源的bug进行了fix。详细可见："),a("code",[s._v("node_modules/@vue/cli-service/lib/webpack/ModernModePlugin.js")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[s._v("#")]),s._v(" 最后")]),s._v(" "),a("p",[s._v('**注意：现代模式分发的代码受跨域限制，例如你的html中引用了第三方资源，并且script有type="module"的属性，第三方服务器头部需要设置Access-Controll-Allow-Origin: ***')])])}),[],!1,null,null,null);t.default=r.exports}}]);