(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{506:function(t,s,e){"use strict";e.r(s);var r=e(46),a=Object(r.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"umi经验总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#umi经验总结"}},[t._v("#")]),t._v(" Umi经验总结")]),t._v(" "),e("h2",{attrs:{id:"umirc-ts中import的ts文件-不能只出现export语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#umirc-ts中import的ts文件-不能只出现export语句"}},[t._v("#")]),t._v(" "),e("code",[t._v(".umirc.ts")]),t._v("中import的ts文件，不能只出现export语句")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .umirc.ts")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" xxx "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./A.ts'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("xxx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A.ts")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况一")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./xxx.ts'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况二")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// would not cause error if")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" xxx "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./xxx.ts'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" xxx "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("umi启动时，会读取配置文件"),e("code",[t._v(".umirc.ts")]),t._v("，并递归分析其依赖文件，然后通过babel register注册。其解析依赖利用的是"),e("a",{attrs:{href:"https://github.com/seajs/crequire",target:"_blank",rel:"noopener noreferrer"}},[t._v("crequire"),e("OutboundLink")],1),t._v("，crequire无法解析上述示例情况一，造成相应的依赖文件未被编译而出现报错。")]),t._v(" "),e("h2",{attrs:{id:"umi中动态设置router-base"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#umi中动态设置router-base"}},[t._v("#")]),t._v(" Umi中动态设置router base")]),t._v(" "),e("p",[t._v("Umi官方文档写到可以通过设置"),e("code",[t._v("base")]),t._v("选项配置router base。其原理是通过插件机制在HTML中内联一段"),e("code",[t._v("window.routerBase=base")]),t._v("的脚本，运行时通过window.routerBase进行设置。如果希望动态设置router base，可以通过"),e("code",[t._v("headScript")]),t._v("配置选项内联一段简单的脚本。")]),t._v(" "),e("h2",{attrs:{id:"usemodel原理浅析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usemodel原理浅析"}},[t._v("#")]),t._v(" useModel原理浅析")]),t._v(" "),e("p",[t._v("在根组件外层嵌套一个Context Provider，用于传递一个"),e("a",{attrs:{href:"https://github.com/umijs/plugins/blob/master/packages/plugin-model/src/helpers/dispatcher.tsx",target:"_blank",rel:"noopener noreferrer"}},[t._v("dispatcher"),e("OutboundLink")],1),t._v("，dispatcher保存每个namespace的状态以及更新回调函数（即调用useModel中传入的第二个参数updater）。")]),t._v(" "),e("p",[t._v("为每个model创建一个Executor组件，Executor的作用在于每当namspace的状态发生了变更，就将新的状态传递给dispatcher，并触发dispatcher遍历执行对应namespace的所有更新回调。")]),t._v(" "),e("p",[t._v("调用useModel时，会将更新回调注册到dispatcher中，而更新回调只有在前后updater返回的数据不一致时，才会进行setState，对当前组件进行更新。")])])}),[],!1,null,null,null);s.default=a.exports}}]);