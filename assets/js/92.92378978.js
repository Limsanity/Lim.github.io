(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{494:function(e,t,a){"use strict";a.r(t);var i=a(46),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"nestjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nestjs"}},[e._v("#")]),e._v(" NestJS")]),e._v(" "),a("h2",{attrs:{id:"guard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#guard"}},[e._v("#")]),e._v(" Guard")]),e._v(" "),a("h3",{attrs:{id:"concept"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concept"}},[e._v("#")]),e._v(" Concept")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("CanActivate、canActivate")]),e._v(" "),a("ul",[a("li",[e._v("implements CanActivate")]),e._v(" "),a("li",[e._v("canActivate return synchronously or asynchronously\n"),a("ul",[a("li",[e._v("if return true, request will be processed")]),e._v(" "),a("li",[e._v("if return false, request will be denied")]),e._v(" "),a("li",[e._v("take single argument, which is "),a("code",[e._v("Execution Context")]),e._v(" instance")])])])])]),e._v(" "),a("li",[a("p",[e._v("compare with middleware")])]),e._v(" "),a("li",[a("p",[e._v("after middleware，before pipe and interceptor")])]),e._v(" "),a("li",[a("p",[e._v("Execution Context")]),e._v(" "),a("ul",[a("li",[e._v("inherits from "),a("code",[e._v("ArgumentsHost")]),e._v("（see "),a("code",[e._v("exception filters")]),e._v("）")])])])]),e._v(" "),a("h3",{attrs:{id:"use-case"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-case"}},[e._v("#")]),e._v(" Use case")]),e._v(" "),a("h4",{attrs:{id:"role-base-authentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#role-base-authentication"}},[e._v("#")]),e._v(" Role-base authentication")]),e._v(" "),a("ul",[a("li",[e._v("implements CanActivate")]),e._v(" "),a("li",[e._v("override canActivate method\n"),a("ul",[a("li",[e._v("accept Execution Context instance as single argument")]),e._v(" "),a("li",[e._v("return synchronous or asynchronous boolean type result, such as\n"),a("ul",[a("li",[e._v("ture or false")]),e._v(" "),a("li",[e._v("Promise<boolean>")]),e._v(" "),a("li",[e._v("Observable<boolean>")])])])])])]),e._v(" "),a("h4",{attrs:{id:"binding-guard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#binding-guard"}},[e._v("#")]),e._v(" Binding guard")]),e._v(" "),a("ul",[a("li",[e._v("UseGuards\n"),a("ul",[a("li",[e._v("on class、methods")]),e._v(" "),a("li",[e._v("class or instance as argument")]),e._v(" "),a("li",[e._v("global guard\n"),a("ul",[a("li",[e._v("hybrid apps doesn't set up guard for gateway and micro service")]),e._v(" "),a("li",[e._v("standard micro service app does mount guard globally")]),e._v(" "),a("li",[e._v("global guard registered from outside of module cannot inject dependencies since this is done outside outside the context of any modules.")])])])])])]),e._v(" "),a("h4",{attrs:{id:"setting-roles-per-handler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-roles-per-handler"}},[e._v("#")]),e._v(" Setting roles per handler")]),e._v(" "),a("ul",[a("li",[e._v("@SetMetadata")])]),e._v(" "),a("h2",{attrs:{id:"pipes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipes"}},[e._v("#")]),e._v(" Pipes")]),e._v(" "),a("h3",{attrs:{id:"concept-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concept-2"}},[e._v("#")]),e._v(" Concept")]),e._v(" "),a("ul",[a("li",[e._v("annotated with "),a("code",[e._v("@Injectable()")]),e._v(" and implement the "),a("code",[e._v("PipeTransform")]),e._v(" interface")]),e._v(" "),a("li",[e._v("two typical use cases\n"),a("ul",[a("li",[e._v("transformation")]),e._v(" "),a("li",[e._v("validation")])])]),e._v(" "),a("li",[e._v("interpose a pipe before a method and the pipe receives the arguments destined for the method")]),e._v(" "),a("li",[e._v("pipe run inside the exceptions zone")])]),e._v(" "),a("h3",{attrs:{id:"built-in-pipes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#built-in-pipes"}},[e._v("#")]),e._v(" Built-in pipes")]),e._v(" "),a("ul",[a("li",[e._v("ValidationPipe")]),e._v(" "),a("li",[e._v("ParseIntPipe")]),e._v(" "),a("li",[e._v("ParseBoolPipe")]),e._v(" "),a("li",[e._v("ParseArrayPipe")]),e._v(" "),a("li",[e._v("ParseUUIDPipe")])]),e._v(" "),a("h3",{attrs:{id:"pipetransform-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipetransform-interface"}},[e._v("#")]),e._v(" PipeTransform Interface")]),e._v(" "),a("ul",[a("li",[e._v("Every pipe has to provide the "),a("code",[e._v("transform")]),e._v(" method, and accpet two parameters:\n"),a("ul",[a("li",[e._v("value\n"),a("ul",[a("li",[e._v("currently processed argument")])])]),e._v(" "),a("li",[e._v("metadata\n"),a("ul",[a("li",[e._v("type: "),a("code",[e._v("'body' | 'query' | 'param' | 'custom'")]),e._v(" "),a("ul",[a("li",[e._v("indicate whether the argument is a body "),a("code",[e._v("@Body()")]),e._v(", query "),a("code",[e._v("@Query")]),e._v(", param "),a("code",[e._v("@Param()")]),e._v(", or custem parameter.")])])]),e._v(" "),a("li",[e._v("metatype\n"),a("ul",[a("li",[e._v("provides the metatype of the argument, e.g. "),a("code",[e._v("String")]),e._v(". The value is "),a("code",[e._v("undefined")]),e._v(" if you either omit a type declaration in the route handler method signature, or use vanilla JavaScript.")])])]),e._v(" "),a("li",[e._v("data\n"),a("ul",[a("li",[e._v("The string passed to the decorator, e.g. "),a("code",[e._v("@Body('string')")]),e._v(". It's "),a("code",[e._v("undefined")]),e._v(" if you leave the decorator parenthesis empty.")])])])])])])]),e._v(" "),a("li",[e._v("TypeScript interfaces disappear during transiplaton. Thus, if a method parameter's type is declared as an interface instead of a class, the "),a("code",[e._v("metatype")]),e._v(" value will be Object.")])]),e._v(" "),a("h3",{attrs:{id:"use-case-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-case-2"}},[e._v("#")]),e._v(" Use case")]),e._v(" "),a("h4",{attrs:{id:"validation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validation"}},[e._v("#")]),e._v(" Validation")]),e._v(" "),a("h5",{attrs:{id:"object-schema-validation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-schema-validation"}},[e._v("#")]),e._v(" Object schema validation")]),e._v(" "),a("ul",[a("li",[e._v("install "),a("code",[e._v("@hapi/joi")]),e._v(" for dependency and "),a("code",[e._v("@types/hapi__joi")]),e._v(" for dev-dependency")]),e._v(" "),a("li",[e._v("create a pipe file e.g. "),a("code",[e._v("joi-validation.pipe.ts")]),e._v(" "),a("ul",[a("li",[e._v("implements "),a("code",[e._v("PipeTransform")])]),e._v(" "),a("li",[e._v("constructor receive an "),a("code",[e._v("ObjectSchema")]),e._v(" type argument")]),e._v(" "),a("li",[e._v("override transform method\n"),a("ul",[a("li",[e._v("use joi validate method for validating value")]),e._v(" "),a("li",[e._v("return value or "),a("code",[e._v("BadRequestException")]),e._v(" instance")])])])])]),e._v(" "),a("li",[e._v("create a schema file e.g. "),a("code",[e._v("createCatSchema")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Joi.object")]),e._v(" for validating")])])]),e._v(" "),a("li",[e._v("Binding pipes in Controller file\n"),a("ul",[a("li",[e._v("method-scoped, controller-scoped, global-scoped, param-scoped")])])])]),e._v(" "),a("h5",{attrs:{id:"class-validator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-validator"}},[e._v("#")]),e._v(" Class validator")]),e._v(" "),a("ul",[a("li",[e._v("install "),a("code",[e._v("class-validator")]),e._v(" and "),a("code",[e._v("class-transformer")]),e._v(" for dependencies")]),e._v(" "),a("li",[e._v("use "),a("code",[e._v("class-validator")]),e._v(" insde dto file e.g. "),a("code",[e._v("create-cat.dto.ts")])]),e._v(" "),a("li",[e._v("create a pipe file e.g. "),a("code",[e._v("validation.pipe.ts")]),e._v(" "),a("ul",[a("li",[e._v("implements "),a("code",[e._v("PipeTransform")])]),e._v(" "),a("li",[e._v("override transform method\n"),a("ul",[a("li",[e._v("essure value is a custom type by validating "),a("code",[e._v("metatype")])]),e._v(" "),a("li",[e._v("use "),a("code",[e._v("plainToClass")]),e._v(" method  (from "),a("code",[e._v("class-transformer")]),e._v(") for getting an object")]),e._v(" "),a("li",[e._v("use "),a("code",[e._v("validator")]),e._v(" method (from "),a("code",[e._v("class-validator")]),e._v(") for validating an object")])])])])])]),e._v(" "),a("h4",{attrs:{id:"transformation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transformation"}},[e._v("#")]),e._v(" Transformation")]),e._v(" "),a("ul",[a("li",[e._v("create pipe file e.g. "),a("code",[e._v("parse-int.pipe.ts")])]),e._v(" "),a("li",[e._v("implements "),a("code",[e._v("PipeTransform")])]),e._v(" "),a("li",[e._v("override "),a("code",[e._v("transform")]),e._v(" method\n"),a("ul",[a("li",[e._v("return transformed value")])])])]),e._v(" "),a("h2",{attrs:{id:"interceptors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interceptors"}},[e._v("#")]),e._v(" Interceptors")]),e._v(" "),a("h3",{attrs:{id:"concept-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concept-3"}},[e._v("#")]),e._v(" Concept")]),e._v(" "),a("ul",[a("li",[e._v("annotated with "),a("code",[e._v("Injectable()")]),e._v(", implement the "),a("code",[e._v("NestInterceptor")]),e._v(" inerface")]),e._v(" "),a("li",[e._v("bind extra logic before / after method execution")]),e._v(" "),a("li",[e._v("transform the result returned from a function")]),e._v(" "),a("li",[e._v("transform the exception thrown from a function")]),e._v(" "),a("li",[e._v("extend the basic function behavior")]),e._v(" "),a("li",[e._v("compeltely override a function depending on specific conditions e.g. caching purposes")]),e._v(" "),a("li",[e._v("Aspect Oriented Programming")])]),e._v(" "),a("h3",{attrs:{id:"basic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic"}},[e._v("#")]),e._v(" Basic")]),e._v(" "),a("ul",[a("li",[e._v("implements the "),a("code",[e._v("intercept()")]),e._v(" method, which take two arguments.\n"),a("ul",[a("li",[e._v("one is the "),a("code",[e._v("ExecutionContext")]),e._v(" instance")]),e._v(" "),a("li",[e._v("the second is a "),a("code",[e._v("CallHandler")])])])])]),e._v(" "),a("h3",{attrs:{id:"execution-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#execution-context"}},[e._v("#")]),e._v(" Execution Context")]),e._v(" "),a("ul",[a("li",[e._v("extend "),a("code",[e._v("ArgumentsHost")])]),e._v(" "),a("li",[e._v("see detail in "),a("code",[e._v("ExecutionContext")])])]),e._v(" "),a("h3",{attrs:{id:"call-handler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call-handler"}},[e._v("#")]),e._v(" Call handler")]),e._v(" "),a("ul",[a("li",[e._v("implements "),a("code",[e._v("handle()")]),e._v(" method, which use to invoke the route handler method")]),e._v(" "),a("li",[a("code",[e._v("handle()")]),e._v(" returns an "),a("code",[e._v("Observable")]),e._v("， so we can use RxJS operator like "),a("code",[e._v("map")]),e._v("、"),a("code",[e._v("tap")]),e._v(" etc")])]),e._v(" "),a("h2",{attrs:{id:"custom-providers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-providers"}},[e._v("#")]),e._v(" Custom providers")]),e._v(" "),a("ul",[a("li",[e._v("DI is an IOC technique, where you delegate instantiation of dependencies to the IoC container, e.g. NestJS runtime system.")]),e._v(" "),a("li",[e._v("three steps\n"),a("ul",[a("li",[a("code",[e._v("@Injectable")])]),e._v(" "),a("li",[e._v("annotate constuctor arguments")]),e._v(" "),a("li",[e._v("register provider with the Nest IoC container")])])]),e._v(" "),a("li",[a("code",[e._v("providers")]),e._v(" property takes an array of providers\n"),a("ul",[a("li",[e._v("provider item has "),a("code",[e._v("provide")]),e._v(" and "),a("code",[e._v("useClass")]),e._v(" and "),a("code",[e._v("useValue")]),e._v("  property\n"),a("ul",[a("li",[a("code",[e._v("provide")]),e._v(" is a token")]),e._v(" "),a("li",[a("code",[e._v("useClass")]),e._v(" indicate an working  instance")]),e._v(" "),a("li",[a("code",[e._v("useValue")]),e._v(" is useful for injecting a constant value")])])])])]),e._v(" "),a("li",[e._v("some use cases to use custom providers\n"),a("ul",[a("li",[e._v("want to create a custom instance instead of having Nest instantiate a class")]),e._v(" "),a("li",[e._v("want to re-use an exsting class in a second dependency")]),e._v(" "),a("li",[e._v("want to override a class with a mock version for testing")])])]),e._v(" "),a("li",[a("code",[e._v("useValue")]),e._v(' is useful for injecting a constant value, which should "look like" the specific class, that means same methods and so on.')]),e._v(" "),a("li",[e._v("provide token can be a string as well as symbol instead of class.\n"),a("ul",[a("li",[e._v("If we need to inject a Non-Class-Based provider, we have to use "),a("code",[e._v("@Inject()")]),e._v(" decorator.")])])]),e._v(" "),a("li",[a("code",[e._v("useClass")]),e._v(" syntax allows you to dynamically determin a class that a token should revole to, for example, different config provider in different environment.")]),e._v(" "),a("li",[a("code",[e._v("useFactory")]),e._v(" syntax allows for createing provider dynamically. A more complex factory can itself inject other providers it needs to compute its result, which has a pair of related mechanisms:\n"),a("ul",[a("li",[e._v("The factory function accpet arguments")]),e._v(" "),a("li",[a("code",[e._v("inject")]),e._v(" property accpet array of providers that Nest will resolve and pass to fatory function, that means they should be the same order.")])])]),e._v(" "),a("li",[a("code",[e._v("useExisting")]),e._v(" syntax allows you to create aliases for exsting providers. Differenct provide token resolve the same instance with "),a("code",[e._v("SINGLETON")]),e._v(" case.")]),e._v(" "),a("li",[e._v("Non-service based providers.")]),e._v(" "),a("li",[e._v("we can export a custom provider by provide token or provider object.")])]),e._v(" "),a("h2",{attrs:{id:"authentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[e._v("#")]),e._v(" Authentication")]),e._v(" "),a("h3",{attrs:{id:"local-strategy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-strategy"}},[e._v("#")]),e._v(" Local Strategy")]),e._v(" "),a("h4",{attrs:{id:"install-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-dependencies"}},[e._v("#")]),e._v(" Install Dependencies")]),e._v(" "),a("ul",[a("li",[e._v("对于所有的strategy都需要安装"),a("code",[e._v("@nestjs/passport")]),e._v("和"),a("code",[e._v("passport")]),e._v("包，然后是具体strategy对应的包如"),a("code",[e._v("passport-jwt")]),e._v("和"),a("code",[e._v("passport-local")]),e._v("。")])]),e._v(" "),a("h4",{attrs:{id:"implement-strategy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implement-strategy"}},[e._v("#")]),e._v(" Implement Strategy")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("创建module和service文件")])]),e._v(" "),a("li",[a("p",[e._v("编写service中的逻辑，并在module中引入service")])]),e._v(" "),a("li",[a("p",[e._v("创建strategy文件")])]),e._v(" "),a("li",[a("p",[e._v("编写strategy逻辑，需要继承"),a("code",[e._v("PassportStrategy(Strategy)")]),e._v("，并重写"),a("code",[e._v("validate")]),e._v("方法，在module中引入strategy")])]),e._v(" "),a("li",[a("p",[e._v("root module中引入auth module，在controller中使用"),a("code",[e._v("UseGuard")]),e._v("实现鉴权")])])]),e._v(" "),a("h2",{attrs:{id:"validation-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validation-2"}},[e._v("#")]),e._v(" Validation")]),e._v(" "),a("h3",{attrs:{id:"built-in-pipes-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#built-in-pipes-2"}},[e._v("#")]),e._v(" Built-in pipes")]),e._v(" "),a("ul",[a("li",[e._v("ValidationPipe\n"),a("ul",[a("li",[e._v("make use of "),a("a",{attrs:{href:"https://github.com/typestack/class-validator",target:"_blank",rel:"noopener noreferrer"}},[e._v("class-validator"),a("OutboundLink")],1)])])]),e._v(" "),a("li",[e._v("ParseIntPipe")]),e._v(" "),a("li",[e._v("ParseBoolPipe")]),e._v(" "),a("li",[e._v("ParseArrayPipe")]),e._v(" "),a("li",[e._v("ParseUUIDPipe")])]),e._v(" "),a("h3",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),a("h4",{attrs:{id:"using-the-built-in-validationpipe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-the-built-in-validationpipe"}},[e._v("#")]),e._v(" Using the built-in ValidationPipe")]),e._v(" "),a("ul",[a("li",[e._v("all "),a("code",[e._v("class-validator")]),e._v(" options are available")]),e._v(" "),a("li",[e._v("use concrete class in DTO instead of generic or interfaces in typescript")]),e._v(" "),a("li",[a("code",[e._v("app.useGlobalPipes(new ValidationPipe())")]),e._v(" for auto-validation")]),e._v(" "),a("li",[e._v("disable detailed errors by passing option to "),a("code",[e._v("ValidationPipe")]),e._v(" constructor")]),e._v(" "),a("li",[e._v("set "),a("code",[e._v("whitelist: true")]),e._v(" for filtering out properties which without any decorator in validation class, aka DTO")]),e._v(" "),a("li",[e._v("set "),a("code",[e._v("forbidNonWhitelisted: true")]),e._v(" and "),a("code",[e._v("whitelist: true")]),e._v(" for denying processing request when no-whitelisted properties present")]),e._v(" "),a("li",[e._v("set "),a("code",[e._v("transform: true")]),e._v(" for transforming the plain JS Object comming from network to their DTO class, with the option enabled, "),a("code",[e._v("ValidationPipe")]),e._v(" will also perform conversion of primitive types e.g. specify the "),a("code",[e._v("id")]),e._v(" type as number in the method signature.")]),e._v(" "),a("li",[e._v("alternatively, with auto-transformation disabled, you can use "),a("code",[e._v("parseIntPiep")]),e._v(" etc for explicit conversion")]),e._v(" "),a("li",[e._v("use "),a("code",[e._v("parseArrayPipe")]),e._v(" and pass DTO class for validating array type. In addition, the "),a("code",[e._v("ParseArrayPipe")]),e._v(" may come in handy when parsing query parameters because you can pass "),a("code",[e._v("seperator")]),e._v(" option")]),e._v(" "),a("li",[e._v("works the same for websockets and microservices")])])])}),[],!1,null,null,null);t.default=r.exports}}]);